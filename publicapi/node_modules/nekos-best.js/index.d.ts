declare const ENDPOINTS: readonly ["smile", "smug", "tickle", "kiss", "laugh", "nekos", "baka", "cry", "cuddle", "dance", "feed", "hug", "pat", "poke", "slap", "wave", "bite", "blush", "bored", "facepalm", "happy", "highfive", "pout", "shrug", "sleep", "stare", "think", "thumbsup", "wink"];
export declare function fetchNeko<T extends nbEndpoints>(type: T, amount: number, options?: {
    min?: number;
    max?: number;
}): Promise<nbResponse[] | null>;
export declare function fetchNeko<T extends nbEndpoints>(type: T, amount?: number, options?: {
    min?: number;
    max?: number;
}): Promise<nbResponse | null>;
export declare type nbLimits = {
    [k in nbEndpoints]: {
        min: string;
        max: string;
        format: string;
    };
};
export declare type nbEndpoints = typeof ENDPOINTS[number];
export interface nbResponse extends Partial<nbDetails> {
    url: string;
}
interface nbDetails {
    artist_href: string;
    artist_name: string;
    source_url: string;
}
export {};
